name: CI/CD Pipeline for WordPress and MySQL

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the repository
      - name: Checkout Code
        uses: actions/checkout@v2

      # Step 2: Log in to Docker Hub
      - name: Log in to Docker Hub
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      # Step 3: Build WordPress Image
      - name: Build WordPress Image
        run: docker build -t ${{ secrets.DOCKER_USERNAME }}/wordpress:latest -f ./Dockerfile .

      # Step 4: Push WordPress Image to Docker Hub
      - name: Push WordPress Image
        run: docker push ${{ secrets.DOCKER_USERNAME }}/wordpress:latest

      # Step 5: Build MySQL Image (optional: MySQL can be pulled directly from Docker Hub)
      - name: Pull MySQL Image from Docker Hub
        run: docker pull mysql:5.7

      # Step 6: Push MySQL Image to Docker Hub (optional if customizing MySQL image)
      - name: Push MySQL Image (if customized)
        if: ${{ env.MYSQL_IMAGE_CUSTOMIZED == 'true' }}  # If customized, otherwise skip
        run: docker push ${{ secrets.DOCKER_USERNAME }}/mysql:5.7

  deploy:
    runs-on: ubuntu-latest
    needs: build

    steps:
      # Step 7: SSH to EC2 and Deploy
      - name: SSH to EC2 and Deploy
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ubuntu
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            # Step 7a: Log in to Docker Hub on EC2
            echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

            # Step 7b: Pull latest images from Docker Hub
            docker pull ${{ secrets.DOCKER_USERNAME }}/wordpress:latest
            docker pull mysql:5.7

            # Step 7c: Start Docker Compose on EC2
            docker-compose -f /path/to/docker-compose.yml up -d
