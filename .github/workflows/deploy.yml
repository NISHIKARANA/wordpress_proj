name: CI/CD Pipeline for WordPress and MySQL

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the repository
      - name: Checkout Code
        uses: actions/checkout@v2

      # Step 2: Log in to Docker Hub
      - name: Log in to Docker Hub
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      # Step 3: Build WordPress Image
      - name: Build WordPress Image
        run: docker build -t ${{ secrets.DOCKER_USERNAME }}/wordpress:latest -f ./Dockerfile .

      # Step 4: Push WordPress Image to Docker Hub
      - name: Push WordPress Image
        run: docker push ${{ secrets.DOCKER_USERNAME }}/wordpress:latest

      # Step 5: Pull MySQL Image from Docker Hub
      - name: Pull MySQL Image from Docker Hub
        run: docker pull mysql:5.7

      # Step 6: Push MySQL Image to Docker Hub (if customized)
      - name: Push MySQL Image (if customized)
        if: ${{ env.MYSQL_IMAGE_CUSTOMIZED == 'true' }}
        run: docker push ${{ secrets.DOCKER_USERNAME }}/mysql:5.7

  deploy:
    runs-on: ubuntu-latest
    needs: build

    steps:
      # Step 7: Configure AWS Credentials
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-north-1  # Updated to the correct region

      # Step 8: Update ECS Service
      - name: Update ECS Service
        run: |
          aws ecs update-service --cluster wordpress_project --service wordpress --force-new-deployment --region eu-north-1 
