name: CI/CD Pipeline for WordPress and MySQL

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v2

      - name: Log in to Docker Hub
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      - name: Build WordPress Image
        run: docker build -t ${{ secrets.DOCKER_USERNAME }}/wordpress:latest -f ./Dockerfile .

      - name: Push WordPress Image
        run: docker push ${{ secrets.DOCKER_USERNAME }}/wordpress:latest

      - name: Pull MySQL Image from Docker Hub
        run: docker pull mysql:5.7

      - name: Push MySQL Image (if customized)
        if: ${{ env.MYSQL_IMAGE_CUSTOMIZED == 'true' }}
        run: docker push ${{ secrets.DOCKER_USERNAME }}/mysql:5.7

  deploy:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: SSH to EC2 and Deploy
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ubuntu
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            # Ensure Docker is installed
            if ! command -v docker &> /dev/null; then
              echo "Docker not found, installing Docker..."
              curl -fsSL https://get.docker.com -o get-docker.sh
              sudo sh get-docker.sh
            fi
            
            # Ensure Docker Compose is installed
            if ! command -v docker-compose &> /dev/null; then
              echo "Docker Compose not found, installing Docker Compose..."
              sudo curl -L "https://github.com/docker/compose/releases/download/1.29.2/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
              sudo chmod +x /usr/local/bin/docker-compose
            fi

            # Add 'ubuntu' user to 'docker' group to avoid permission issues
            sudo usermod -aG docker $USER
            echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin
              
            # Pull the latest images
            docker pull ${{ secrets.DOCKER_USERNAME }}/wordpress:latest
            docker pull mysql:5.7

            # Path to Docker Compose file on the EC2 instance
            COMPOSE_FILE_PATH="/home/ubuntu/docker-compose.yml"

            # Verify Docker Compose file path and run Docker Compose
            if [ -f "$COMPOSE_FILE_PATH" ]; then
              echo "Running Docker Compose with file at $COMPOSE_FILE_PATH"
              sudo docker-compose -f "$COMPOSE_FILE_PATH" up -d
            else
              echo "Error: Docker Compose file not found at $COMPOSE_FILE_PATH"
              exit 1
            fi
